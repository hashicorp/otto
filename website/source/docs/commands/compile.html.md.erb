---
layout: "docs"
page_title: "Commands: compile"
sidebar_current: "docs-commands-compile"
description: >
  The compile command prepares Otto to manage your application.
---

# Command: compile

The `compile` command tells Otto to prepare to manage your application. Otto
configures itself with smart defaults by detecting what kind of application
exists in the current directory. Using the optional
[Appfile](/docs/appfile/index.html), you can also add specific config to
override or modify Otto's default.

Otto then generates all the [Vagrant](https://www.vagrantup.com),
[Packer](https://www.packer.io), and [Terraform](https://www.terraform.io) config
necessary to develop, build, and deploy your application. These generated
configs are stored under the `.otto` directory for easy inspection. (Otto only
stores local data in the `.otto` - it is not meant to be checked in to version
control.)

During compilation, Otto also generates a unique identifier for your app and
stores this in `.ottoid`. This helps ensure that multiple applications deployed
into the same infrastructure will not collide or be duplicated. This file
should be checked in to version control.

## Usage

```
otto compile
```

This is meant to be the first command you run in your application's root
directory. Otto's other commands will detect if `otto compile` still needs to
be run and let you know.

## Example

Here is an example run from a Ruby project with no `Appfile` present:

```
❯ otto compile
==> Loading Appfile...
==> No Appfile found! Detecting project information...
    No Appfile was found. If there is no Appfile, Otto will do its best
    to detect the type of application this is and set reasonable defaults.
    This is a good way to get started with Otto, but over time we recommend
    writing a real Appfile since this will allow more complex customizations,
    the ability to reference dependencies, versioning, and more.
==> Fetching all Appfile dependencies...
==> Compiling...
    Application:    website (ruby)
    Project:        website
    Infrastructure: aws (simple)

    Compiling infra...
    Compiling foundation: consul
==> Compiling main application...
==> Compilation success!
    This means that Otto is now ready to start a development environment,
    deploy this application, build the supporting infrastructure, and
    more. See the help for more information.

    Supporting files to enable Otto to manage your application from
    development to deployment have been placed in the output directory.
    These files can be manually inspected to determine what Otto will do.
```
