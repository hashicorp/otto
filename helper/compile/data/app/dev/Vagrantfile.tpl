# Generated by Otto, do not edit!
#
# This is the Vagrantfile generated by Otto for the development of
# this application/service. It should not be hand-edited. To modify the
# Vagrantfile, use the Appfile.

Vagrant.configure("2") do |config|
  {% block vagrant_box %}
  if ENV["OTTO_VAGRANT_LAYER_PATH"]
    config.vm.clone = ENV["OTTO_VAGRANT_LAYER_PATH"]
  else
    config.vm.box = "hashicorp/precise64"
    config.vm.box_check_update = false
    config.vm.provider :parallels do |p, o|
      o.vm.box = "parallels/ubuntu-12.04"
    end
  end
  {% endblock %}

  # Host only network
  config.vm.network "private_network", ip: "{{ dev_ip_address }}", netmask: "255.192.0.0"

  {% block default_shared_folder %}
  # Setup a synced folder from our working directory to /vagrant
  config.vm.synced_folder '{{ path.working }}', "/vagrant",
    owner: "vagrant", group: "vagrant"
  {% endblock %}

  # Enable SSH agent forwarding so getting private dependencies works
  config.ssh.forward_agent = true

  # Foundation configuration (if any)
  {% for dir in foundation_dirs.dev %}
  dir = "/otto/foundation-{{ forloop.Counter }}"
  config.vm.synced_folder '{{ dir }}', dir
  config.vm.provision "shell", inline: "cd #{dir} && bash #{dir}/main.sh"
  {% endfor %}

  # ScriptPacks
  dir = "/otto/scriptpacks"
  config.vm.provision "shell", inline: "sudo rm -rf #{dir}; sudo mkdir -p #{dir}; sudo chmod 0777 #{dir}"
  {% for sp in scriptpacks %}
  config.vm.provision "file", source: "{{ sp.path }}", destination: "#{dir}/{{ sp.name }}.tar.gz"
  config.vm.provision "shell", inline: "cd #{dir}; sudo mkdir {{ sp.name }}; sudo tar xzf {{ sp.name }}.tar.gz -C {{ sp.name }}"
  {% endfor %}

  # Load all our fragments here for any dependencies.
  {% for fragment in dev_fragments %}
  {{ fragment|read }}
  {% endfor %}

  # Use linked clones if possible
  config.vm.provider "virtualbox" do |p|
    p.linked_clone = true
  end

  if Vagrant.has_plugin?("vagrant-parallels", ">= 1.6.0")
    config.vm.provider "parallels" do |p|
      p.linked_clone = true
    end
  end

  # This is to work around some bugs right now
  ["vmware_fusion", "vmware_workstation"].each do |name|
    config.vm.provider(name) do |p|
      p.enable_vmrun_ip_lookup = false
    end
  end

  {% block vagrant_config %}{% endblock %}
end

{% if dev_extra_vagrantfile and dev_extra_vagrantfile != "" %}
# Extra Vagrantfile specified in Appfile manually
load "{{ dev_extra_vagrantfile }}"
{% endif %}

{% block footer %}{% endblock %}
